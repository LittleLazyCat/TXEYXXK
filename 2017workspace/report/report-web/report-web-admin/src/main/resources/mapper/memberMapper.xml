<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.report.common.dal.admin.dao.MemberDao" >
	
  <resultMap id="memberModelResultMap" type="com.report.common.dal.admin.entity.vo.MemberModel" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="ACC_NO" property="accNo" jdbcType="VARCHAR" />
    <result column="NAME" property="name" jdbcType="VARCHAR" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="GROUP_NAME" property="groupName" jdbcType="VARCHAR" />
    <result column="GROUP_CODE" property="groupCode" jdbcType="VARCHAR" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="CREATER_ACC_NO" property="createrAccNo" jdbcType="VARCHAR" />
    <result column="MODIFIER_ACC_NO" property="modifierAccNo" jdbcType="VARCHAR" />
  </resultMap>
  
  <resultMap id="memberResultMap" type="com.report.common.dal.admin.entity.dto.Member" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="acc_no" property="accNo" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.report.common.dal.admin.entity.dto.Member">
     insert into uc_member(id,ACC_NO,PASSWORD,NAME,STATUS)
     values(#{id,jdbcType=INTEGER},#{accNo,jdbcType=VARCHAR},#{password,jdbcType=VARCHAR},#{name,jdbcType=VARCHAR},#{status,jdbcType=INTEGER})
  </insert>
 
  <update id="updateUser" parameterType="com.report.common.dal.admin.entity.dto.Member" >
     update uc_member set ACC_NO=#{accNo,jdbcType=VARCHAR},NAME=#{name,jdbcType=VARCHAR},STATUS=#{status,jdbcType=INTEGER},UPDATE_TIME=CURRENT_TIMESTAMP
         where id=#{id,jdbcType=INTEGER}
  </update>
  
  <delete id="delete" parameterType="long">
  	 delete from uc_member where id=#{memberId,jdbcType=INTEGER}
  </delete>
  
  <select id="findMemberByAccNo"  parameterType="string" resultMap="memberResultMap">
  	select * from uc_member t where t.acc_no=#{accNo, jdbcType=VARCHAR} and t.status=1
  </select>

  <select id="countMemberByMemberIdAndPassword" parameterType="map" resultType="int">
  	select count(*)
  	from uc_member m 
  	where m.id = #{currentMemberId,jdbcType=INTEGER} and m.password = #{encryptedPassword,jdbcType=VARCHAR}
  </select>
  
  <update id="updatePasswordByMemberId" parameterType="map">
  	update uc_member m set m.password = #{password,jdbcType=VARCHAR} where m.id = #{id,jdbcType=INTEGER}
  </update>
  
  <select id="countMemberByAccNo" parameterType="string" resultType="int">
  	select count(*) from uc_member m where m.acc_no = #{accNo,jdbcType=VARCHAR}
  </select>
  
  <select id="count" parameterType="com.report.common.model.MemberQueryReq" resultType="long">
	 	select count(*) from uc_member m
	 	<where>
		<if test="memberQueryReq.accNo!=null ">
		    AND acc_no like CONCAT('%', #{memberQueryReq.accNo,jdbcType=VARCHAR},'%')
		</if>
		<if test="memberQueryReq.name!=null">
		    AND name like CONCAT('%', #{memberQueryReq.name,jdbcType=VARCHAR},'%')
		</if>
		</where>
  </select>
  
  <select id="findMemberList" parameterType="map" resultMap="memberModelResultMap">
  	select
  		m.acc_no,
  		m.name,
  		m.status, 
  		g.group_name,
  		g.group_code,
  		m.id,
  		m.create_time,
  		m.update_time,
      	(select t.acc_no from uc_member t where t.id = m.creater_id) creater_acc_no,
      	(select t.acc_no from uc_member t where t.id = m.modifier_id) modifier_acc_no
  	from 
  		uc_member m LEFT JOIN uc_member_group mg on mg.member_id = m.id
		left JOIN uc_group g on g.group_code = mg.group_code
		where 1=1 
		<if test="memberQueryReq.accNo!=null">
		   AND	m.acc_no like CONCAT('%', #{memberQueryReq.accNo,jdbcType=VARCHAR},'%')
		</if>
		<if test="memberQueryReq.name!=null">
		    AND m.name like CONCAT('%', #{memberQueryReq.name,jdbcType=VARCHAR},'%')
		</if>
  		order by
  		m.create_time desc
  </select>
  
  <select id="countAssociationWithGroup" parameterType="long" resultType="int">
  	select count(*)
	from 
		uc_member_group mg
	where 
		mg.member_id = #{memberId,jdbcType=INTEGER}
		and mg.status = 1
  </select>
  
</mapper>