<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.report.common.dal.admin.dao.GroupDao" >
	
  <resultMap id="groupResultMap" type="com.report.common.dal.admin.entity.dto.Group" >
    <id column="ID" property="id" jdbcType="INTEGER" />
    <result column="GROUP_CODE" property="groupCode" jdbcType="VARCHAR" />
    <result column="GROUP_NAME" property="groupName" jdbcType="VARCHAR" />
    <result column="GROUP_TYPE" property="groupType" jdbcType="INTEGER" />
    <result column="CREATE_TIME" property="createTime" jdbcType="TIMESTAMP" />
    <result column="UPDATE_TIME" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="STATUS" property="status" jdbcType="INTEGER" />
    <result column="CREATER_ID" property="createrId" jdbcType="INTEGER" />
  </resultMap>
  
  <resultMap id="groupModelResultMap" type="com.report.common.dal.admin.entity.vo.GroupModel">
  	<result column="id" property="id" jdbcType="VARCHAR" />
  	<result column="group_code" property="groupCode" jdbcType="VARCHAR" />
  	<result column="group_name" property="groupName" jdbcType="VARCHAR" />
  	<result column="status" property="status" jdbcType="INTEGER" />
  	<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
  	<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  	<result column="creater_acc_no" property="createrAccNo" jdbcType="VARCHAR" />
  	<result column="modifier_acc_no" property="modifierAccNo" jdbcType="VARCHAR" />
  </resultMap>
	
  <delete id="deleteAssociateWithMember" parameterType="long">
  	delete from uc_member_group where member_id = #{memberId,jdbcType=INTEGER}
  </delete>
  
  <select id="findAllGroups" resultMap="groupResultMap">
  	select * from uc_group
  </select>

  <select id="queryGroupByRoles" resultType="String" parameterType="java.util.Map">
		 select ug.group_code
		  from  uc_group ug,
		       		 uc_group_role ugr
		 where ug.group_code = ugr.group_code
		       and NOT EXISTS (select *
		                         from (select grole.role_code
		                                 from member m,
		                                      uc_member_group mgr,
		                                      uc_group_role grole
		                                where mgr.group_code = grole.group_code
		                                      and m.id = mgr.member_id
		                                      and grole.role_code != #{sourceRoleCode, jdbcType=NUMERIC}
		                                      and m.id =  #{memberId, jdbcType=NUMERIC}
		                               UNION
		                               select #{targetRoleCode, jdbcType=NUMERIC}
		                                 from dual) nn
		                        where ugr.role_code != nn.role_code) 
		
  </select>
  <select id="findGroupdByPage4SysAdmin" resultMap="groupModelResultMap" parameterType="map">
	select 
		g.id,
		g.group_code,
		g.group_name,
		
		g.status,
		date_format(g.create_time, '%Y-%m-%d %T') create_time,
		date_format(g.update_time, '%Y-%m-%d %T') update_time,
		(select t.acc_no from uc_member t where t.id = g.creater_id) creater_acc_no,
		(select t.acc_no from uc_member t where t.id = g.modifier_id) modifier_acc_no
	from
		uc_group g
		where 1=1
		<include refid="group_list_where_clause"/>
	order by g.create_time desc
  </select>
  
   <select id="countForGroupList" resultType="long" parameterType="map">
  	select count(*) from uc_group g where 1=1
  	<include refid="group_list_where_clause"/>
  </select>
  
  <sql id="group_list_where_clause">
  	<if test="currentMemberGroupCode != null and currentMemberGroupCode !=''">
  		and group_code = #{currentMemberGroupCode}
  	</if>
  	<if test="groupCode != null and groupCode !=''">
  		and group_code like '%'||#{groupCode}||'%'
  	</if>
  	<if test="groupName != null and groupName != ''">
  		and group_name like '%'||#{groupName}||'%'
  	</if>
  	<if test="status != null">
  		and status = #{status}
  	</if>
  </sql>
  
  <select id="findGroupNames4SysAdmin" resultType="map">
  	select 
  		g.group_code "groupCode",
  		g.group_name "groupName" 
  	from
  		uc_group g 
  	where 
  		g.status = 1
  </select>
  
  <update id="updateGroupCodeByMemberId" parameterType="map">
  	update
  		uc_member_group 
  	set 
  		group_code = #{groupCode,jdbcType=VARCHAR}
  	where 
  		member_id = #{memberId,jdbcType=INTEGER}
  </update>
  
  <delete id="deleteGroup" parameterType="long">
  	delete from uc_group where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <select id="countMemberByGroupCode" parameterType="string" resultType="int">
  	select count(*) from uc_member_group mg where mg.group_code = #{groupCode,jdbcType=VARCHAR}
  </select>
  
  <select id="countRolebyGroupCode" parameterType="string" resultType="int">
  	select count(*) from uc_group_role t where t.group_code = #{groupCode,jdbcType=VARCHAR}
  </select>
  
  <select id="countGroupByGroupCode" parameterType="string" resultType="int">
  	select count(*) from uc_group g
  	where g.group_code = #{groupCode,jdbcType=VARCHAR}
  	<if test="groupId != null">
  		and g.id != #{groupId}	
  	</if>
  </select>
  
  <select id="countGroupByMemberId" parameterType="long" resultType="int">
  	select count(*) from uc_member_group mg where mg.member_id = #{memberId}
  </select>
  
  <insert id="addMappingGroup2Member" parameterType="map">
  	insert into uc_member_group(member_id, group_code)
  	values(#{memberId,jdbcType=INTEGER}, #{groupCode,jdbcType=VARCHAR})
  </insert>
  
  <select id="getGroupCodeByMemberId" parameterType="long" resultType="string">
  	select ug.group_code from uc_group ug, uc_member_group umg 
  	where ug.group_code = umg.group_code  and umg.member_id=#{memberId}
  </select>
  
  <select id="isSameGroupCode" parameterType="map" resultType="int">
  	select
  		count(*)
	from
		uc_group g
	where
		g.id = #{groupId,jdbcType=INTEGER}
    	and g.group_code = #{groupCode,jdbcType=VARCHAR}
  </select>
</mapper>